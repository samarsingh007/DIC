# -*- coding: utf-8 -*-
"""NB.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1r_nTrHu3AwqPfKDLZ7CAe32XBEChWDHo
"""

import pandas as pd

df = pd.read_excel("Movie_Gross_Value.xlsx")

genre_split = df['GENRE'].str.split(', ', expand=True)

genre_split.columns = [f'genre{i + 1}' for i in range(genre_split.shape[1])]

df_split = pd.concat([df, genre_split], axis=1)

df_split.to_excel("UpdatedGrossValue.xlsx", index=False)

df = pd.read_excel("UpdatedGrossValue.xlsx")

features = df[['genre1', 'genre2', 'genre3', 'VOTES', 'RATING']]

label = df['Gross']

from sklearn.model_selection import train_test_split

X_train, X_test, y_train, y_test = train_test_split(features, label, test_size=0.2, random_state=42)

from sklearn.naive_bayes import MultinomialNB

clf = MultinomialNB()

from sklearn.preprocessing import OneHotEncoder

encoder = OneHotEncoder(sparse=False, drop='first')

genre_encoded = encoder.fit_transform(df[['genre1', 'genre2', 'genre3']])

genre_encoded_df = pd.DataFrame(genre_encoded, columns=encoder.get_feature_names_out(['genre1', 'genre2', 'genre3']))

features_encoded = pd.concat([genre_encoded_df, df[['VOTES', 'RATING']]], axis=1)

X_train, X_test, y_train, y_test = train_test_split(features_encoded, label, test_size=0.2, random_state=42)

clf = MultinomialNB()
clf.fit(X_train, y_train)

y_pred = clf.predict(X_test)

y_pred

import seaborn as sns

sns.pairplot(df[['VOTES', 'RATING', 'Gross']], diag_kind='kde')

import matplotlib.pyplot as plt
plt.show()

from sklearn.metrics import classification_report, confusion_matrix

class_report = classification_report(y_test, y_pred)

conf_matrix = confusion_matrix(y_test, y_pred)

class_report

conf_matrix